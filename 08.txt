Practical â€“ 8
Aim: Image Segmentation.


8.A) Differentiation of Gaussian function
# Code :
// Differentiation of Gaussian functio
sigma=input(' Enter the value of sigma : ')
i= -10:.1:10;
j= -10:.1:10;
r=sqrt(i.*i+j.*j);
y=(1/( sigma ^2))*(((r.*r)/sigma ^2) -1).*exp(-r.*r/2*sigma ^2);
plot(i,y)
legend(sprintf(' The sigma value is %g ',sigma))
xtitle(' Differentiation of Gaussian function ')


8.B) Shape of Dog Filter.
# Code :
// Shape of Dog Filter
sigma1 =input(' Enter the value of sigma1 : ')
sigma2 =input(' Enter the value of sigma2 : ')
i= -10:.1:10;
j= -10:.1:10;
r=sqrt(i.*i+j.*j);
y1 = (1/( sigma1 ^2))*(((r.*r)/sigma1 ^2) -1).*exp(-r.*r/2*
sigma1 ^2);
y2 = (1/( sigma2 ^2))*(((r.*r)/sigma2 ^2) -1).*exp(-r.*r/2*
sigma2 ^2); y = y1 -y2;
plot(i,y)
xtitle(' Shape of DOG Filter ')


8.C) EDGE DETECTION
# Code :
// EDGE Detection.
img = imread("");
img=rgb2gray(img);
c=edge(img,'sobel',0.5)
d=edge(img,'prewitt')
e=edge(img,'canny')
f=edge(img,'log')
figure(1)
imshow(img)
title('Original Image')
figure(2)
imshow(c)
title('Sobel')
figure(3)
imshow(d)
title('Prewitt')
figure(4)
imshow(e)
title('Canny')
figure(5)
imshow(f)
title('LOG')
